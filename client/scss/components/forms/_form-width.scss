@use 'sass:map';
@use 'sass:math';

/**
 * Calculate the ideal form width to avoid any overlap with the side panels.
 */

//@mixin form-width-vw($breakpoint) {
//  .side-panel-open & {
//    width: calc(
//      100vw - $menu-width - $side-panel-width - $desktop-nice-padding -
//      theme('spacing.4')
//    );
//  }
//
//  .side-panel-open.sidebar-collapsed & {
//    width: calc(
//      100vw - $menu-width-slim - $side-panel-width - $desktop-nice-padding -
//      theme('spacing.4')
//    );
//  }
//}

/**
 * Special resizing logic for forms with side panels.
 * Handles the padding as well
 */
.w-app-container {
  @include nice-padding();
  width: 100%;
  max-width: $max-form-width;

  @include media-breakpoint-up(md) {
    width: 70%;
  }

  // Let tabs determine padding and width
  .tab-content & {
    padding: 0;
    width: 100%;
  }

  // If forms are already inside of a nice-padding block then rely on that padding instead.
  .nice-padding & {
    padding: 0;
  }
}

.fields {
  // Apply the desired form width for legacy `fields` container.
  max-width: $max-form-width;

  // Remove any spacing in legacy fields markup.
  > li {
    padding: 0;
  }
}
